[{"C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\index.js":"1","C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\reportWebVitals.js":"2","C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\App.js":"3","C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\ApplicationViews.js":"4","C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\AppHeader.js":"5","C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\providers\\UserProfileProvider.js":"6","C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\Explore.js":"7","C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\Register.js":"8","C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\Login.js":"9","C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\PostDetails.js":"10","C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\CategoryManager.js":"11","C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\PostList.js":"12","C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\Category.js":"13","C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\PostReactions.js":"14","C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\utils\\dateFormatter.js":"15","C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\PostSummaryCard.js":"16","C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\TagManager.js":"17","C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\Tag.js":"18","C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\PostForm.js":"19","C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\NotFoundForm.js":"20","C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\CommentForm.js":"21","C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\CommentCard.js":"22"},{"size":666,"mtime":1611591933894,"results":"23","hashOfConfig":"24"},{"size":375,"mtime":1611068843034,"results":"25","hashOfConfig":"24"},{"size":687,"mtime":1611068843015,"results":"26","hashOfConfig":"24"},{"size":1850,"mtime":1611602519047,"results":"27","hashOfConfig":"24"},{"size":2996,"mtime":1611602519046,"results":"28","hashOfConfig":"24"},{"size":3089,"mtime":1611068843033,"results":"29","hashOfConfig":"24"},{"size":561,"mtime":1611068843027,"results":"30","hashOfConfig":"24"},{"size":3893,"mtime":1611068843032,"results":"31","hashOfConfig":"24"},{"size":2231,"mtime":1611068843029,"results":"32","hashOfConfig":"24"},{"size":3818,"mtime":1611591933937,"results":"33","hashOfConfig":"24"},{"size":2740,"mtime":1611602519056,"results":"34","hashOfConfig":"24"},{"size":333,"mtime":1611068843020,"results":"35","hashOfConfig":"24"},{"size":3913,"mtime":1611246179659,"results":"36","hashOfConfig":"24"},{"size":646,"mtime":1611068843021,"results":"37","hashOfConfig":"24"},{"size":194,"mtime":1611068843037,"results":"38","hashOfConfig":"24"},{"size":1314,"mtime":1611591933875,"results":"39","hashOfConfig":"24"},{"size":3069,"mtime":1611591933941,"results":"40","hashOfConfig":"24"},{"size":4254,"mtime":1611602519055,"results":"41","hashOfConfig":"24"},{"size":3541,"mtime":1611602519049,"results":"42","hashOfConfig":"24"},{"size":527,"mtime":1611591933869,"results":"43","hashOfConfig":"24"},{"size":3382,"mtime":1611591933929,"results":"44","hashOfConfig":"24"},{"size":1296,"mtime":1611591933910,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"ndpvx6",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},"C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\index.js",[],["98","99"],"C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\reportWebVitals.js",[],"C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\App.js",[],"C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\ApplicationViews.js",["100","101"],"import React, { useContext } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport Explore from \"../pages/Explore\";\r\nimport Login from \"../pages/Login\";\r\nimport Register from \"../pages/Register\";\r\nimport PostDetails from \"../pages/PostDetails\";\r\nimport PostForm from \"./PostForm\";\r\nimport CategoryManager from \"../pages/CategoryManager\";\r\n\r\nimport CommentForm from \"../pages/CommentForm\";\r\nimport TagManager from \"../pages/TagManager\";\r\nimport NotFoundForm from \"./NotFoundForm\";\r\n\r\nconst ApplicationViews = () => {\r\n  const { isLoggedIn } = useContext(UserProfileContext);\r\n  const { isAdmin } = useContext(UserProfileContext);\r\n\r\n\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        {isLoggedIn ? <p>Home</p> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/explore\">\r\n        {isLoggedIn ? <Explore /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/post/add\">\r\n        {isLoggedIn ? <PostForm /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/post/:postId(\\d+)\">\r\n        {isLoggedIn ? <PostDetails /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/post/addcomment/:postId(\\d+)\">\r\n        {isLoggedIn ? <CommentForm /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/categories\">\r\n        {isLoggedIn ? <CategoryManager /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/tags\">\r\n        {isLoggedIn ? <TagManager /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/login\">\r\n        <Login />\r\n      </Route>\r\n      <Route path=\"/register\">\r\n        <Register />\r\n      </Route>\r\n      <Route path=\"/404\">\r\n        <h1>Not Found</h1>\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default ApplicationViews;\r\n","C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\AppHeader.js",["102"],"C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\providers\\UserProfileProvider.js",[],"C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\Explore.js",[],"C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\Register.js",[],"C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\Login.js",[],"C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\PostDetails.js",[],"C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\CategoryManager.js",["103","104"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Input,\r\n  InputGroup,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport Category from \"../components/Category\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\n\r\nconst CategoryManager = () => {\r\n  const { getToken } = useContext(UserProfileContext);\r\n  const [categories, setCategories] = useState([]);\r\n  const [newCategory, setNewCategory] = useState(\"\");\r\n  const { getCurrentUser, isAdmin } = useContext(UserProfileContext);\r\n\r\n  useEffect(() => {\r\n    getCategories();\r\n  }, []);\r\n\r\n  const getCategories = () => {\r\n    getToken().then((token) =>\r\n      fetch(`/api/category`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n        .then((res) => res.json())\r\n        .then((categories) => {\r\n          setCategories(categories);\r\n        })\r\n    );\r\n  };\r\n\r\n  const saveNewCategory = () => {\r\n    const categoryToAdd = { name: newCategory };\r\n    getToken().then((token) =>\r\n      fetch(\"/api/category\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(categoryToAdd),\r\n      }).then(() => {\r\n        setNewCategory(\"\");\r\n        getCategories();\r\n      })\r\n    );\r\n  };\r\n  //add an onEdit to use in Category to give access to getCategories\r\n  if (!isAdmin()) {\r\n    return <Redirect to=\"/404\" />;\r\n  } else {\r\n    return (\r\n      <div className=\"container mt-5\">\r\n        <img\r\n          height=\"100\"\r\n          src=\"/quill.png\"\r\n          alt=\"Quill Logo\"\r\n          className=\"bg-danger rounded-circle\"\r\n        />\r\n        <h1>Category Management</h1>\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-xs-12 col-sm-8 col-md-6\">\r\n            <ListGroup>\r\n              {categories.map((category) => (\r\n                <ListGroupItem key={category.id}>\r\n                  <Category\r\n                    category={category}\r\n                    onEdit={getCategories}\r\n                    onDelete={getCategories}\r\n                  />\r\n                </ListGroupItem>\r\n              ))}\r\n            </ListGroup>\r\n            <div className=\"my-4\">\r\n              <InputGroup>\r\n                <Input\r\n                  onChange={(e) => setNewCategory(e.target.value)}\r\n                  value={newCategory}\r\n                  placeholder=\"Add a new category\"\r\n                />\r\n                <Button onClick={saveNewCategory}>Save</Button>\r\n              </InputGroup>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default CategoryManager;\r\n","C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\PostList.js",[],"C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\Category.js",[],"C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\PostReactions.js",[],"C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\utils\\dateFormatter.js",[],"C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\PostSummaryCard.js",[],"C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\TagManager.js",["105"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Input,\r\n    InputGroup,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport Tag from \"../components/Tag\"\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst TagManager = () => {\r\n    const { getToken } = useContext(UserProfileContext);\r\n    const [tags, setTags] = useState([]);\r\n    const [newTag, setNewTag] = useState(\"\");\r\n    const { isAdmin } = useContext(UserProfileContext);\r\n\r\n\r\n    useEffect(() => {\r\n        getTags();\r\n    }, []);\r\n\r\n    const getTags = () => {\r\n        getToken().then((token) =>\r\n            fetch(`/api/tag`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((tags) => {\r\n                    setTags(tags);\r\n                })\r\n        );\r\n    };\r\n    const saveNewTag = () => {\r\n        const tagToAdd = { name: newTag };\r\n        getToken().then((token) =>\r\n            fetch(\"/api/tag\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(tagToAdd),\r\n            }).then(() => {\r\n                setNewTag(\"\");\r\n                getTags();\r\n            })\r\n        );\r\n    };\r\n    if (!isAdmin()) {\r\n        return <Redirect to=\"/404\" />\r\n    } else {\r\n        return (\r\n\r\n            <div className=\"container mt-5\">\r\n                <img\r\n                    height=\"100\"\r\n                    src=\"/quill.png\"\r\n                    alt=\"Quill Logo\"\r\n                    className=\"bg-danger rounded-circle\"\r\n                />\r\n                <h1>Tag Management</h1>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-xs-12 col-sm-8 col-md-6\">\r\n                        <ListGroup>\r\n                            {tags.map((tag) => (\r\n                                <ListGroupItem key={tag.id}>\r\n                                    <Tag tag={tag} onEdit={getTags} onDelete={getTags} />\r\n                                </ListGroupItem>\r\n                            ))}\r\n                        </ListGroup>\r\n                        <div className=\"my-4\">\r\n                            <InputGroup>\r\n                                <Input\r\n                                    onChange={(e) => setNewTag(e.target.value)}\r\n                                    value={newTag}\r\n                                    placeholder=\"Add a new Tag\"\r\n                                />\r\n                                <Button onClick={saveNewTag}>Save</Button>\r\n                            </InputGroup>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    };\r\n};\r\nexport default TagManager;","C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\Tag.js",["106","107"],"import userEvent from \"@testing-library/user-event\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport { Button, Input, InputGroup, ButtonGroup, Form, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Tag = ({ tag, onEdit, onDelete }) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [pendingDelete, setPendingDelete] = useState(false);\r\n    const [tagEdits, setTagEdits] = useState(\"\");\r\n    const { getToken } = useContext(UserProfileContext);\r\n    const { isAdmin } = useContext(UserProfileContext);\r\n\r\n    const showEdit = () => {\r\n        setIsEditing(true);\r\n        setTagEdits(tag.name);\r\n    };\r\n    const hideEdit = () => {\r\n        setIsEditing(false);\r\n        setTagEdits(\"\");\r\n    };\r\n\r\n    const saveEdit = () => {\r\n        const tagToEdit = { id: tag.id, name: tagEdits }\r\n        getToken().then((token) =>\r\n            fetch(`/api/tag/${tag.id}`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(tagToEdit),\r\n            }).then(() => {\r\n                setIsEditing(false);\r\n                onEdit();\r\n            })\r\n        );\r\n    };\r\n\r\n    const saveDelete = () => {\r\n        const tagToDelete = { id: tag.id }\r\n        getToken().then((token) =>\r\n            fetch(`/api/tag/${tag.id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(tagToDelete)\r\n            }).then(() => {\r\n                setPendingDelete(false);\r\n                onDelete();\r\n            }))\r\n    }\r\n\r\n    if (!isAdmin()) {\r\n        return <Redirect to=\"/404\" />\r\n    } else {\r\n        return (\r\n            <div className=\"justify-content-between row\">\r\n                {/* If user is editing */}\r\n                {isEditing ? (\r\n                    <Form className=\"w-100\">\r\n                        <InputGroup>\r\n                            <Input size=\"sm\" onChange={(e) => setTagEdits(e.target.value)}\r\n                                value={tagEdits} />\r\n                            <ButtonGroup size=\"sm\">\r\n                                <Button onClick={saveEdit}>Save</Button>\r\n                                <Button outline color=\"danger\" onClick={hideEdit}>\r\n                                    Cancel\r\n                        </Button>\r\n                            </ButtonGroup>\r\n                        </InputGroup>\r\n                    </Form>\r\n                ) : (\r\n                        // If user is not editing\r\n                        <>\r\n                            <div className=\"p-1\">{tag.name}</div>\r\n                            <ButtonGroup size=\"sm\">\r\n                                <Button className=\"btn btn-primary\" onClick={showEdit}>\r\n                                    Edit\r\n                    </Button>\r\n                                <Button\r\n                                    className=\"btn btn-danger\"\r\n                                    onClick={(e) => setPendingDelete(true)}\r\n                                >\r\n                                    Delete\r\n                    </Button>\r\n                            </ButtonGroup>\r\n                        </>\r\n                    )}\r\n                <Modal isOpen={pendingDelete}>\r\n                    <ModalHeader>Delete {tag.name}?</ModalHeader>\r\n                    <ModalBody>\r\n                        Are you sure you want to delete {tag.name} tag? This action cannot be\r\n          undone.\r\n        </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button onClick={(e) => setPendingDelete(false)}>No, Cancel</Button>\r\n                        <Button onClick={saveDelete} className=\"btn btn-outline-danger\">Yes, Delete</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    };\r\n};\r\nexport default Tag;","C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\PostForm.js",["108"],"import React, { useState, useContext, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  Input,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\n\r\nconst PostForm = () => {\r\n  const [post, setPost] = useState([]);\r\n  const { getToken } = useContext(UserProfileContext);\r\n  const [imageLocation, setImageLocation] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [categoryId, setCategoryId] = useState(\"\");\r\n  const [publishDateTime, setPublicationDate] = useState(\"\");\r\n\r\n  // Use this hook to allow us to programatically redirect users\r\n  const history = useHistory();\r\n\r\n  const imageHeader = useRef(null);\r\n  const postTitle = useRef(null);\r\n  const postContent = useRef(null);\r\n  const publishDate = useRef(null);\r\n  const catId = useRef(null);\r\n\r\n  const submit = (e) => {\r\n    const post = {\r\n      imageLocation,\r\n      title,\r\n      content,\r\n      categoryId,\r\n      publishDateTime,\r\n    };\r\n    getToken().then((token) =>\r\n      fetch(\"/api/post\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(post),\r\n      }).then((p) => {\r\n        // Navigate the user to post detail\r\n        history.push(`/explore`);\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container pt-4\">\r\n      <div className=\"row justify-content-center\">\r\n        <Card className=\"col-sm-12 col-lg-6\">\r\n          <CardBody>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label for=\"imageLocation\">Header Image URL</Label>\r\n                <Input\r\n                  id=\"imageLocation\"\r\n                  useRef={imageHeader}\r\n                  onChange={(e) => setImageLocation(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"title\">Title</Label>\r\n                <Input\r\n                  id=\"title\"\r\n                  useRef={postTitle}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"content\">Content</Label>\r\n                <Input\r\n                  id=\"content\"\r\n                  useRef={postContent}\r\n                  onChange={(e) => setContent(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"categoryId\">Category Id</Label>\r\n                <Input\r\n                  id=\"categoryId\"\r\n                  useRef={catId}\r\n                  onChange={(e) => setCategoryId(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"publishDateTime\">Publication Date</Label>\r\n                <Input\r\n                  id=\"publishDateTime\"\r\n                  useRef={publishDate}\r\n                  onChange={(e) => setPublicationDate(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n            </Form>\r\n            <Button\r\n              color=\"danger\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                submit(post);\r\n              }}\r\n            >\r\n              SUBMIT POST\r\n            </Button>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n","C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\NotFoundForm.js",["109","110"],"import React from \"react\";\r\nimport Explore from \"../pages/Explore\";\r\n\r\nconst NotFoundForm = () => {\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-content\">\r\n                <picture>\r\n                    <img src=\"../image/404-error-page-not-found.jpg\" alt=\"404 image\" />\r\n                </picture>\r\n                <link to=\"../pages/Explore.js\">\r\n                    <h1>Go Home</h1>\r\n                </link>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\nexport default NotFoundForm;","C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\CommentForm.js",[],"C:\\Users\\stark\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\CommentCard.js",["111"],"import React from \"react\"\r\nimport { Col, Row, Jumbotron } from \"reactstrap\"\r\nimport formatDate from \"../utils/dateFormatter\";\r\n\r\nexport const CommentCard = ({ comments }) => {\r\n\r\n    return <>\r\n        <Row >\r\n            <Col></Col>\r\n            <Col md={7} className=\"text-left mt-5\">\r\n                <div><strong className=\" font-weight-bold\">Subject:</strong>&nbsp; {comments.subject} </div>\r\n            </Col>\r\n            <Col></Col>\r\n        </Row>\r\n        <Row>\r\n            <Col></Col>\r\n            <Col md={7} className=\"text-left mt-1\">\r\n                <div><strong className=\" font-weight-bold\">Comment:</strong>&nbsp;   {comments.content}</div>\r\n            </Col>\r\n            <Col></Col>\r\n        </Row>\r\n        <Row>\r\n            <Col></Col>\r\n            <Col md={7} className=\"text-left mt-1\">\r\n                <div><strong className=\" font-weight-bold\">Author:</strong>&nbsp; {comments.userProfile.displayName}</div>\r\n            </Col>\r\n            <Col></Col>\r\n        </Row>\r\n        <Row>\r\n            <Col></Col>\r\n            <Col md={7} className=\"text-left mt-1\">\r\n                <div> <strong className=\" font-weight-bold\">Posted:</strong>&nbsp;  {formatDate(comments.createDateTime)} </div>\r\n            </Col>\r\n            <Col></Col>\r\n        </Row>\r\n    </>\r\n}",{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":14,"column":8,"nodeType":"118","messageId":"119","endLine":14,"endColumn":20},{"ruleId":"116","severity":1,"message":"120","line":18,"column":11,"nodeType":"118","messageId":"119","endLine":18,"endColumn":18},{"ruleId":"116","severity":1,"message":"121","line":17,"column":11,"nodeType":"118","messageId":"119","endLine":17,"endColumn":25},{"ruleId":"116","severity":1,"message":"121","line":18,"column":11,"nodeType":"118","messageId":"119","endLine":18,"endColumn":25},{"ruleId":"122","severity":1,"message":"123","line":23,"column":6,"nodeType":"124","endLine":23,"endColumn":8,"suggestions":"125"},{"ruleId":"122","severity":1,"message":"126","line":20,"column":8,"nodeType":"124","endLine":20,"endColumn":10,"suggestions":"127"},{"ruleId":"116","severity":1,"message":"128","line":1,"column":8,"nodeType":"118","messageId":"119","endLine":1,"endColumn":17},{"ruleId":"116","severity":1,"message":"129","line":2,"column":39,"nodeType":"118","messageId":"119","endLine":2,"endColumn":48},{"ruleId":"116","severity":1,"message":"130","line":15,"column":16,"nodeType":"118","messageId":"119","endLine":15,"endColumn":23},{"ruleId":"116","severity":1,"message":"131","line":2,"column":8,"nodeType":"118","messageId":"119","endLine":2,"endColumn":15},{"ruleId":"132","severity":1,"message":"133","line":10,"column":21,"nodeType":"134","endLine":10,"endColumn":88},{"ruleId":"116","severity":1,"message":"135","line":2,"column":20,"nodeType":"118","messageId":"119","endLine":2,"endColumn":29},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'NotFoundForm' is defined but never used.","Identifier","unusedVar","'isAdmin' is assigned a value but never used.","'getCurrentUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.","ArrayExpression",["138"],"React Hook useEffect has a missing dependency: 'getTags'. Either include it or remove the dependency array.",["139"],"'userEvent' is defined but never used.","'useEffect' is defined but never used.","'setPost' is assigned a value but never used.","'Explore' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Jumbotron' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [getCategories]",{"range":"144","text":"145"},"Update the dependencies array to be: [getTags]",{"range":"146","text":"147"},[655,657],"[getCategories]",[516,518],"[getTags]"]