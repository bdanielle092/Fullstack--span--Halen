[{"C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\index.js":"1","C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\App.js":"2","C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\reportWebVitals.js":"3","C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\providers\\UserProfileProvider.js":"4","C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\ApplicationViews.js":"5","C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\AppHeader.js":"6","C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\Register.js":"7","C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\Explore.js":"8","C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\Login.js":"9","C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\NotFoundForm.js":"10","C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\PostForm.js":"11","C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\PostDetails.js":"12","C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\CommentForm.js":"13","C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\TagManager.js":"14","C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\CategoryManager.js":"15","C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\PostList.js":"16","C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\PostReactions.js":"17","C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\Tag.js":"18","C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\utils\\dateFormatter.js":"19","C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\Category.js":"20","C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\CommentCard.js":"21","C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\PostSummaryCard.js":"22"},{"size":666,"mtime":1611588531636,"results":"23","hashOfConfig":"24"},{"size":687,"mtime":1611068810505,"results":"25","hashOfConfig":"24"},{"size":375,"mtime":1611068810550,"results":"26","hashOfConfig":"24"},{"size":3089,"mtime":1611068810549,"results":"27","hashOfConfig":"24"},{"size":1848,"mtime":1611611317031,"results":"28","hashOfConfig":"24"},{"size":2996,"mtime":1611603077744,"results":"29","hashOfConfig":"24"},{"size":3893,"mtime":1611068810545,"results":"30","hashOfConfig":"24"},{"size":561,"mtime":1611068810535,"results":"31","hashOfConfig":"24"},{"size":2231,"mtime":1611068810539,"results":"32","hashOfConfig":"24"},{"size":665,"mtime":1611682126676,"results":"33","hashOfConfig":"24"},{"size":3541,"mtime":1611603077754,"results":"34","hashOfConfig":"24"},{"size":3818,"mtime":1611588531645,"results":"35","hashOfConfig":"24"},{"size":3382,"mtime":1611588531642,"results":"36","hashOfConfig":"24"},{"size":3227,"mtime":1611682449664,"results":"37","hashOfConfig":"24"},{"size":2858,"mtime":1611673919028,"results":"38","hashOfConfig":"24"},{"size":333,"mtime":1611068810516,"results":"39","hashOfConfig":"24"},{"size":646,"mtime":1611068810519,"results":"40","hashOfConfig":"24"},{"size":4237,"mtime":1611588531591,"results":"41","hashOfConfig":"24"},{"size":194,"mtime":1611068810555,"results":"42","hashOfConfig":"24"},{"size":3913,"mtime":1611246212474,"results":"43","hashOfConfig":"24"},{"size":1296,"mtime":1611588531641,"results":"44","hashOfConfig":"24"},{"size":1314,"mtime":1611588531588,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"zlkp4b",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\index.js",[],["98","99"],"C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\App.js",[],"C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\reportWebVitals.js",[],"C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\providers\\UserProfileProvider.js",[],"C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\ApplicationViews.js",["100"],"import React, { useContext } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport Explore from \"../pages/Explore\";\r\nimport Login from \"../pages/Login\";\r\nimport Register from \"../pages/Register\";\r\nimport PostDetails from \"../pages/PostDetails\";\r\nimport PostForm from \"./PostForm\";\r\nimport CategoryManager from \"../pages/CategoryManager\";\r\nimport CommentForm from \"../pages/CommentForm\";\r\nimport TagManager from \"../pages/TagManager\";\r\nimport NotFoundForm from \"./NotFoundForm\";\r\n\r\nconst ApplicationViews = () => {\r\n  const { isLoggedIn } = useContext(UserProfileContext);\r\n  const { isAdmin } = useContext(UserProfileContext);\r\n\r\n\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        {isLoggedIn ? <p>Home</p> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/explore\">\r\n        {isLoggedIn ? <Explore /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/post/add\">\r\n        {isLoggedIn ? <PostForm /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/post/:postId(\\d+)\">\r\n        {isLoggedIn ? <PostDetails /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/post/addcomment/:postId(\\d+)\">\r\n        {isLoggedIn ? <CommentForm /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/categories\">\r\n        {isLoggedIn ? <CategoryManager /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/tags\">\r\n        {isLoggedIn ? <TagManager /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/login\">\r\n        <Login />\r\n      </Route>\r\n      <Route path=\"/register\">\r\n        <Register />\r\n      </Route>\r\n      <Route path=\"/404\">\r\n        <NotFoundForm />\r\n      </Route>\r\n\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default ApplicationViews;\r\n","C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\AppHeader.js",["101"],"import React, { useState, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText,\r\n} from \"reactstrap\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\n\r\nconst AppHeader = () => {\r\n  const { getCurrentUser, logout, isAdmin } = useContext(UserProfileContext);\r\n  const user = JSON.parse(localStorage.getItem(\"userProfile\"));\r\n  const history = useHistory();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  const logoutAndReturn = () => {\r\n    return logout().then(() => {\r\n      toast.dark(\"You are now logged out\");\r\n      history.push(\"/login\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"dark\" dark expand=\"md\">\r\n        <NavbarBrand tag={Link} to=\"/\">\r\n          <img\r\n            id=\"header-logo\"\r\n            src=\"/quill.png\"\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"mr-1\"\r\n            alt=\"Quill Logo\"\r\n          />\r\n          Tabloid\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            {user ? (\r\n              <>\r\n                <NavItem>\r\n                  <NavLink to=\"/explore\" tag={Link}>\r\n                    Explore\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink to=\"/post/add\" tag={Link}>\r\n                    New Post\r\n                  </NavLink>\r\n                </NavItem>\r\n                {isAdmin() && (\r\n                  <NavItem>\r\n                    <NavLink to=\"/categories\" tag={Link}>\r\n                      Categories\r\n                    </NavLink>\r\n                  </NavItem>\r\n                )}\r\n                {isAdmin() && (\r\n                  <NavItem>\r\n                    <NavLink to=\"/tags\" tag={Link}>\r\n                      Tags\r\n                    </NavLink>\r\n                  </NavItem>\r\n                )}\r\n                <NavItem>\r\n                  <NavLink onClick={logoutAndReturn}>Logout</NavLink>\r\n                </NavItem>\r\n              </>\r\n            ) : (\r\n                <>\r\n                  <NavItem>\r\n                    <NavLink to=\"/login\" tag={Link}>\r\n                      Login\r\n                  </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink to=\"/register\" tag={Link}>\r\n                      Register\r\n                  </NavLink>\r\n                  </NavItem>\r\n                </>\r\n              )}\r\n          </Nav>\r\n          {user ? (\r\n            <NavbarText className=\"d-sm-none d-md-block\">\r\n              Welcome {user.displayName}\r\n            </NavbarText>\r\n          ) : null}\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\Register.js",[],"C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\Explore.js",[],"C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\Login.js",[],"C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\NotFoundForm.js",["102","103"],"C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\PostForm.js",["104"],"import React, { useState, useContext, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  Input,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\n\r\nconst PostForm = () => {\r\n  const [post, setPost] = useState([]);\r\n  const { getToken } = useContext(UserProfileContext);\r\n  const [imageLocation, setImageLocation] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [categoryId, setCategoryId] = useState(\"\");\r\n  const [publishDateTime, setPublicationDate] = useState(\"\");\r\n\r\n  // Use this hook to allow us to programatically redirect users\r\n  const history = useHistory();\r\n\r\n  const imageHeader = useRef(null);\r\n  const postTitle = useRef(null);\r\n  const postContent = useRef(null);\r\n  const publishDate = useRef(null);\r\n  const catId = useRef(null);\r\n\r\n  const submit = (e) => {\r\n    const post = {\r\n      imageLocation,\r\n      title,\r\n      content,\r\n      categoryId,\r\n      publishDateTime,\r\n    };\r\n    getToken().then((token) =>\r\n      fetch(\"/api/post\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(post),\r\n      }).then((p) => {\r\n        // Navigate the user to post detail\r\n        history.push(`/explore`);\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container pt-4\">\r\n      <div className=\"row justify-content-center\">\r\n        <Card className=\"col-sm-12 col-lg-6\">\r\n          <CardBody>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label for=\"imageLocation\">Header Image URL</Label>\r\n                <Input\r\n                  id=\"imageLocation\"\r\n                  useRef={imageHeader}\r\n                  onChange={(e) => setImageLocation(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"title\">Title</Label>\r\n                <Input\r\n                  id=\"title\"\r\n                  useRef={postTitle}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"content\">Content</Label>\r\n                <Input\r\n                  id=\"content\"\r\n                  useRef={postContent}\r\n                  onChange={(e) => setContent(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"categoryId\">Category Id</Label>\r\n                <Input\r\n                  id=\"categoryId\"\r\n                  useRef={catId}\r\n                  onChange={(e) => setCategoryId(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"publishDateTime\">Publication Date</Label>\r\n                <Input\r\n                  id=\"publishDateTime\"\r\n                  useRef={publishDate}\r\n                  onChange={(e) => setPublicationDate(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n            </Form>\r\n            <Button\r\n              color=\"danger\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                submit(post);\r\n              }}\r\n            >\r\n              SUBMIT POST\r\n            </Button>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n","C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\PostDetails.js",["105","106"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Jumbotron } from \"reactstrap\";\r\nimport { Row } from \"reactstrap\";\r\nimport { Col } from \"reactstrap\";\r\nimport { Button } from \"reactstrap\"\r\nimport PostReactions from \"../components/PostReactions\";\r\nimport formatDate from \"../utils/dateFormatter\";\r\nimport \"./PostDetails.css\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport { CommentCard } from \"./CommentCard\"\r\n\r\n\r\nconst PostDetails = () => {\r\n  const { getToken } = useContext(UserProfileContext);\r\n  const { postId } = useParams();\r\n  const [post, setPost] = useState();\r\n  // const [posts, setPosts] = useState([])\r\n  const [reactionCounts, setReactionCounts] = useState([]);\r\n  const history = useHistory();\r\n  const [comments, setComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`/api/comment/${postId}`)\r\n      .then((res) => res.json())\r\n      .then((comments) => {\r\n        setComments(comments);\r\n      });\r\n  }, []);\r\n\r\n  // const getComments = () => {\r\n  //   getToken().then((token) =>\r\n  //     fetch(`/api/comment`, {\r\n  //       method: \"GET\",\r\n  //       headers: {\r\n  //         Authorization: `Bearer ${token}`,\r\n  //       },\r\n  //     })\r\n  //       .then((res) => res.json())\r\n  //       .then((comments) => {\r\n  //         setComments(comments);\r\n  //       })\r\n  //   );\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   fetch(`/api/post`)\r\n  //     .then((res) => res.json())\r\n  //     .then((posts) => {\r\n  //       setPosts(posts);\r\n  //     });\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(`/api/post/${postId}`)\r\n      .then((res) => {\r\n        if (res.status === 404) {\r\n          toast.error(\"This isn't the post you're looking for\");\r\n          return;\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setPost(data.post);\r\n        setReactionCounts(data.reactionCounts);\r\n      });\r\n  }, [postId]);\r\n\r\n  if (!post) return null;\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Jumbotron\r\n        className=\"post-details__jumbo\"\r\n        style={{ backgroundImage: `url('${post.imageLocation}')` }}\r\n      ></Jumbotron>\r\n      <div className=\"container\">\r\n        <h1>{post.title}</h1>\r\n        <h5 className=\"text-danger\">{post.category.name}</h5>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <img\r\n              src={post.userProfile.imageLocation}\r\n              alt={post.userProfile.displayName}\r\n              className=\"post-details__avatar rounded-circle\"\r\n            />\r\n            <p className=\"d-inline-block\">{post.userProfile.displayName}</p>\r\n          </div>\r\n          <div className=\"col\">\r\n            <p>{formatDate(post.publishDateTime)}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"text-justify post-details__content\">{post.content}</div>\r\n        <div className=\"my-4\">\r\n          <PostReactions postReactions={reactionCounts} />\r\n        </div>\r\n        <br />\r\n      </div>\r\n      <Row className=\"mt-5 ml-2\">\r\n        <Col>\r\n          <h3>Comments</h3>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mt-3\">\r\n        <Col className=\"ml-4\">\r\n          <Button color=\"success\"\r\n            onClick={() => {\r\n              history.push(`/post/addcomment/${postId}`)\r\n            }}\r\n\r\n          >Add New Comment\r\n          </Button>\r\n        </Col>\r\n        <Col>\r\n        </Col>\r\n      </Row>\r\n\r\n      {\r\n        comments.map(comments => {\r\n          return <CommentCard key={comments.id} comments={comments} />\r\n        })\r\n      }\r\n      {/* \r\n      {\r\n        posts.map(posts => {\r\n          return <CommentCard key={posts.id} posts={posts} />\r\n        })\r\n      } */}\r\n\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default PostDetails;","C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\CommentForm.js",[],"C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\TagManager.js",["107"],"C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\CategoryManager.js",["108"],"C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\PostList.js",[],"C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\PostReactions.js",[],"C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\Tag.js",["109","110"],"import userEvent from \"@testing-library/user-event\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport { Button, Input, InputGroup, ButtonGroup, Form, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Tag = ({ tag, onEdit, onDelete }) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [pendingDelete, setPendingDelete] = useState(false);\r\n    const [tagEdits, setTagEdits] = useState(\"\");\r\n    const { getToken } = useContext(UserProfileContext);\r\n    const { isAdmin } = useContext(UserProfileContext);\r\n\r\n    const showEdit = () => {\r\n        setIsEditing(true);\r\n        setTagEdits(tag.name);\r\n    };\r\n    const hideEdit = () => {\r\n        setIsEditing(false);\r\n        setTagEdits(\"\");\r\n    };\r\n\r\n    const saveEdit = () => {\r\n        const tagToEdit = { id: tag.id, name: tagEdits }\r\n        getToken().then((token) =>\r\n            fetch(`/api/tag/${tag.id}`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(tagToEdit),\r\n            }).then(() => {\r\n                setIsEditing(false);\r\n                onEdit();\r\n            })\r\n        );\r\n    };\r\n\r\n    const saveDelete = () => {\r\n        const tagToDelete = { id: tag.id }\r\n        getToken().then((token) =>\r\n            fetch(`/api/tag/${tag.id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(tagToDelete)\r\n            }).then(() => {\r\n                setPendingDelete(false);\r\n                onDelete();\r\n            }))\r\n    }\r\n\r\n    if (!isAdmin()) {\r\n        return <Redirect to=\"/404\" />\r\n    } else {\r\n        return (\r\n            <div className=\"justify-content-between row\">\r\n                {/* If user is editing */}\r\n                {isEditing ? (\r\n                    <Form className=\"w-100\">\r\n                        <InputGroup>\r\n                            <Input size=\"sm\" onChange={(e) => setTagEdits(e.target.value)}\r\n                                value={tagEdits} />\r\n                            <ButtonGroup size=\"sm\">\r\n                                <Button onClick={saveEdit}>Save</Button>\r\n                                <Button outline color=\"danger\" onClick={hideEdit}>\r\n                                    Cancel\r\n                        </Button>\r\n                            </ButtonGroup>\r\n                        </InputGroup>\r\n                    </Form>\r\n                ) : (\r\n                        // If user is not editing\r\n                        <>\r\n                            <div className=\"p-1\">{tag.name}</div>\r\n                            <ButtonGroup size=\"sm\">\r\n                                <Button className=\"btn btn-primary\" onClick={showEdit}>\r\n                                    Edit\r\n                    </Button>\r\n                                <Button\r\n                                    className=\"btn btn-danger\"\r\n                                    onClick={(e) => setPendingDelete(true)}\r\n                                >\r\n                                    Delete\r\n                    </Button>\r\n                            </ButtonGroup>\r\n                        </>\r\n                    )}\r\n                <Modal isOpen={pendingDelete}>\r\n                    <ModalHeader>Delete {tag.name}?</ModalHeader>\r\n                    <ModalBody>\r\n                        Are you sure you want to delete {tag.name} tag? This action cannot be\r\n          undone.\r\n        </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button onClick={(e) => setPendingDelete(false)}>No, Cancel</Button>\r\n                        <Button onClick={saveDelete} className=\"btn btn-outline-danger\">Yes, Delete</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    };\r\n};\r\nexport default Tag;","C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\utils\\dateFormatter.js",[],"C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\Category.js",["111"],"import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Form,\r\n  Input,\r\n  InputGroup,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n} from \"reactstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\n\r\n//add onEdit here so we can use it on after the edit it complete so we can get all the categories\r\nconst Category = ({ category, onEdit, onDelete }) => {\r\n  const { getToken } = useContext(UserProfileContext);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [pendingDelete, setPendingDelete] = useState(false);\r\n  const [categoryEdits, setCategoryEdits] = useState(\"\");\r\n  const { getCurrentUser, isAdmin } = useContext(UserProfileContext);\r\n\r\n\r\n  const showEditForm = () => {\r\n    setIsEditing(true);\r\n    setCategoryEdits(category.name);\r\n  };\r\n\r\n  const hideEditForm = () => {\r\n    setIsEditing(false);\r\n    setCategoryEdits(\"\");\r\n  };\r\n\r\n  const saveEditForm = () => {\r\n\r\n    const categoryToEdit = { id: category.id, name: categoryEdits };\r\n    getToken().then((token) =>\r\n      fetch(`/api/category/${category.id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(categoryToEdit),\r\n      }).then(() => {\r\n        //setIsEditing to false so the edit button comes back after clicking the save button\r\n        setIsEditing(false);\r\n        //allows user to see all the categories after the edit is complete\r\n        onEdit();\r\n\r\n      })\r\n    );\r\n  };\r\n\r\n\r\n  const savePendingDelete = (id) => {\r\n    const categoryToDelete = { id: category.id };\r\n    getToken().then((token) =>\r\n      fetch(`/api/category/${category.id}`, {\r\n        method: \"Delete\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(categoryToDelete),\r\n      }).then(() => {\r\n        setPendingDelete(false);\r\n        onDelete();\r\n      })\r\n    );\r\n  };\r\n\r\n  if (!isAdmin()) {\r\n    return <Redirect to=\"/404\" />\r\n  } else {\r\n    return (\r\n      <div className=\"justify-content-between row\">\r\n        {isEditing ? (\r\n          <Form className=\"w-100\">\r\n            <InputGroup>\r\n              <Input\r\n                size=\"sm\"\r\n                onChange={(e) => setCategoryEdits(e.target.value)}\r\n                value={categoryEdits}\r\n              />\r\n              <ButtonGroup size=\"sm\">\r\n                <Button onClick={saveEditForm}>Save</Button>\r\n                <Button outline color=\"danger\" onClick={hideEditForm}>\r\n                  Cancel\r\n              </Button>\r\n              </ButtonGroup>\r\n            </InputGroup>\r\n          </Form>\r\n        ) : (\r\n            <>\r\n              <div className=\"p-1\">{category.name}</div>\r\n              <ButtonGroup size=\"sm\">\r\n                <Button className=\"btn btn-primary\" onClick={showEditForm}>\r\n                  Edit\r\n            </Button>\r\n                <Button\r\n                  className=\"btn btn-danger\"\r\n                  onClick={(e) => setPendingDelete(true)}\r\n                >\r\n                  Delete\r\n            </Button>\r\n              </ButtonGroup>\r\n            </>\r\n          )}\r\n        {/* DELETE CONFIRM MODAL */}\r\n        <Modal isOpen={pendingDelete}>\r\n          <ModalHeader>Delete {category.name}?</ModalHeader>\r\n          <ModalBody>\r\n            Are you sure you want to delete this category? This action cannot be\r\n            undone.\r\n        </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={(e) => setPendingDelete(false)}>No, Cancel</Button>\r\n            <Button className=\"btn btn-outline-danger\" onClick={savePendingDelete}>Yes, Delete</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default Category;\r\n","C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\CommentCard.js",["112"],"import React from \"react\"\r\nimport { Col, Row, Jumbotron } from \"reactstrap\"\r\nimport formatDate from \"../utils/dateFormatter\";\r\n\r\nexport const CommentCard = ({ comments }) => {\r\n\r\n    return <>\r\n        <Row >\r\n            <Col></Col>\r\n            <Col md={7} className=\"text-left mt-5\">\r\n                <div><strong className=\" font-weight-bold\">Subject:</strong>&nbsp; {comments.subject} </div>\r\n            </Col>\r\n            <Col></Col>\r\n        </Row>\r\n        <Row>\r\n            <Col></Col>\r\n            <Col md={7} className=\"text-left mt-1\">\r\n                <div><strong className=\" font-weight-bold\">Comment:</strong>&nbsp;   {comments.content}</div>\r\n            </Col>\r\n            <Col></Col>\r\n        </Row>\r\n        <Row>\r\n            <Col></Col>\r\n            <Col md={7} className=\"text-left mt-1\">\r\n                <div><strong className=\" font-weight-bold\">Author:</strong>&nbsp; {comments.userProfile.displayName}</div>\r\n            </Col>\r\n            <Col></Col>\r\n        </Row>\r\n        <Row>\r\n            <Col></Col>\r\n            <Col md={7} className=\"text-left mt-1\">\r\n                <div> <strong className=\" font-weight-bold\">Posted:</strong>&nbsp;  {formatDate(comments.createDateTime)} </div>\r\n            </Col>\r\n            <Col></Col>\r\n        </Row>\r\n    </>\r\n}","C:\\Users\\faith\\workspace-43\\Projects\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\PostSummaryCard.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":16,"column":11,"nodeType":"119","messageId":"120","endLine":16,"endColumn":18},{"ruleId":"117","severity":1,"message":"121","line":17,"column":11,"nodeType":"119","messageId":"120","endLine":17,"endColumn":25},{"ruleId":"122","severity":1,"message":"123","line":12,"column":17,"nodeType":"124","endLine":12,"endColumn":97},{"ruleId":"125","severity":1,"message":"126","line":12,"column":71,"nodeType":"127","endLine":12,"endColumn":94},{"ruleId":"117","severity":1,"message":"128","line":15,"column":16,"nodeType":"119","messageId":"120","endLine":15,"endColumn":23},{"ruleId":"117","severity":1,"message":"129","line":16,"column":11,"nodeType":"119","messageId":"120","endLine":16,"endColumn":19},{"ruleId":"130","severity":1,"message":"131","line":30,"column":6,"nodeType":"132","endLine":30,"endColumn":8,"suggestions":"133"},{"ruleId":"130","severity":1,"message":"134","line":29,"column":8,"nodeType":"132","endLine":29,"endColumn":10,"suggestions":"135"},{"ruleId":"130","severity":1,"message":"136","line":28,"column":6,"nodeType":"132","endLine":28,"endColumn":8,"suggestions":"137"},{"ruleId":"117","severity":1,"message":"138","line":1,"column":8,"nodeType":"119","messageId":"120","endLine":1,"endColumn":17},{"ruleId":"117","severity":1,"message":"139","line":2,"column":39,"nodeType":"119","messageId":"120","endLine":2,"endColumn":48},{"ruleId":"117","severity":1,"message":"121","line":22,"column":11,"nodeType":"119","messageId":"120","endLine":22,"endColumn":25},{"ruleId":"117","severity":1,"message":"140","line":2,"column":20,"nodeType":"119","messageId":"120","endLine":2,"endColumn":29},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'isAdmin' is assigned a value but never used.","Identifier","unusedVar","'getCurrentUser' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setPost' is assigned a value but never used.","'getToken' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'postId'. Either include it or remove the dependency array.","ArrayExpression",["143"],"React Hook useEffect has missing dependencies: 'getCurrentUser', 'getTags', and 'isAdmin'. Either include them or remove the dependency array.",["144"],"React Hook useEffect has missing dependencies: 'getCategories', 'getCurrentUser', and 'isAdmin'. Either include them or remove the dependency array.",["145"],"'userEvent' is defined but never used.","'useEffect' is defined but never used.","'Jumbotron' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [postId]",{"range":"152","text":"153"},"Update the dependencies array to be: [getCurrentUser, getTags, isAdmin]",{"range":"154","text":"155"},"Update the dependencies array to be: [getCategories, getCurrentUser, isAdmin]",{"range":"156","text":"157"},[1089,1091],"[postId]",[779,781],"[getCurrentUser, getTags, isAdmin]",[771,773],"[getCategories, getCurrentUser, isAdmin]"]