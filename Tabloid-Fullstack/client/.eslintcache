[{"C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\index.js":"1","C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\App.js":"2","C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\reportWebVitals.js":"3","C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\AppHeader.js":"4","C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\ApplicationViews.js":"5","C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\providers\\UserProfileProvider.js":"6","C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\Explore.js":"7","C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\PostDetails.js":"8","C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\Login.js":"9","C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\CategoryManager.js":"10","C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\Register.js":"11","C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\PostList.js":"12","C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\PostReactions.js":"13","C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\Category.js":"14","C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\utils\\dateFormatter.js":"15","C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\PostSummaryCard.js":"16","C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\TagManager.js":"17","C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\Tag.js":"18","C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\PostForm.js":"19","C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\MyPosts.js":"20","C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\NotFoundForm.js":"21","C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\CommentForm.js":"22","C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\CommentCard.js":"23"},{"size":666,"mtime":1611589662755,"results":"24","hashOfConfig":"25"},{"size":687,"mtime":1611069012102,"results":"26","hashOfConfig":"25"},{"size":375,"mtime":1611069012108,"results":"27","hashOfConfig":"25"},{"size":3179,"mtime":1611589642661,"results":"28","hashOfConfig":"25"},{"size":1990,"mtime":1611589769511,"results":"29","hashOfConfig":"25"},{"size":3089,"mtime":1611069012108,"results":"30","hashOfConfig":"25"},{"size":561,"mtime":1611069012106,"results":"31","hashOfConfig":"25"},{"size":3818,"mtime":1611589662758,"results":"32","hashOfConfig":"25"},{"size":2231,"mtime":1611069012107,"results":"33","hashOfConfig":"25"},{"size":2809,"mtime":1611589823912,"results":"34","hashOfConfig":"25"},{"size":3893,"mtime":1611069012107,"results":"35","hashOfConfig":"25"},{"size":333,"mtime":1611259843379,"results":"36","hashOfConfig":"25"},{"size":646,"mtime":1611069012104,"results":"37","hashOfConfig":"25"},{"size":3913,"mtime":1611181021917,"results":"38","hashOfConfig":"25"},{"size":194,"mtime":1611069012109,"results":"39","hashOfConfig":"25"},{"size":1314,"mtime":1611589662753,"results":"40","hashOfConfig":"25"},{"size":3069,"mtime":1611589662763,"results":"41","hashOfConfig":"25"},{"size":4237,"mtime":1611589662754,"results":"42","hashOfConfig":"25"},{"size":3576,"mtime":1611589642665,"results":"43","hashOfConfig":"25"},{"size":3195,"mtime":1611599693353,"results":"44","hashOfConfig":"25"},{"size":527,"mtime":1611589662752,"results":"45","hashOfConfig":"25"},{"size":3382,"mtime":1611589662756,"results":"46","hashOfConfig":"25"},{"size":1296,"mtime":1611589662756,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jxgukb",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},"C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\index.js",[],"C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\App.js",[],["101","102"],"C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\reportWebVitals.js",[],"C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\AppHeader.js",["103"],"import React, { useState, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText,\r\n} from \"reactstrap\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\n\r\nconst AppHeader = () => {\r\n  const { getCurrentUser, logout, isAdmin } = useContext(UserProfileContext);\r\n  // const user = JSON.parse(localStorage.getItem(\"userProfile\"));\r\n  const user = getCurrentUser();\r\n  const history = useHistory();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  const logoutAndReturn = () => {\r\n    return logout().then(() => {\r\n      toast.dark(\"You are now logged out\");\r\n      history.push(\"/login\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"dark\" dark expand=\"md\">\r\n        <NavbarBrand tag={Link} to=\"/\">\r\n          <img\r\n            id=\"header-logo\"\r\n            src=\"/quill.png\"\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"mr-1\"\r\n            alt=\"Quill Logo\"\r\n          />\r\n          Tabloid\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            {user ? (\r\n              <>\r\n                <NavItem>\r\n                  <NavLink to=\"/explore\" tag={Link}>\r\n                    Explore\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink to=\"/post/add\" tag={Link}>\r\n                    New Post\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink to=\"/myposts\" tag={Link}>\r\n                    My Post\r\n                  </NavLink>\r\n                </NavItem>\r\n                {isAdmin() && (\r\n                  <NavItem>\r\n                    <NavLink to=\"/categories\" tag={Link}>\r\n                      Categories\r\n                    </NavLink>\r\n                  </NavItem>\r\n                )}\r\n                {isAdmin() && (\r\n                  <NavItem>\r\n                    <NavLink to=\"/tags\" tag={Link}>\r\n                      Tags\r\n                    </NavLink>\r\n                  </NavItem>\r\n                )}\r\n                <NavItem>\r\n                  <NavLink onClick={logoutAndReturn}>Logout</NavLink>\r\n                </NavItem>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <NavItem>\r\n                  <NavLink to=\"/login\" tag={Link}>\r\n                    Login\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink to=\"/register\" tag={Link}>\r\n                    Register\r\n                  </NavLink>\r\n                </NavItem>\r\n              </>\r\n            )}\r\n          </Nav>\r\n          {user ? (\r\n            <NavbarText className=\"d-sm-none d-md-block\">\r\n              Welcome {user.displayName}\r\n            </NavbarText>\r\n          ) : null}\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\ApplicationViews.js",["104","105"],"C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\providers\\UserProfileProvider.js",[],"C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\Explore.js",[],"C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\PostDetails.js",[],"C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\Login.js",[],"C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\CategoryManager.js",["106","107"],"C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\Register.js",[],"C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\PostList.js",[],"C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\PostReactions.js",[],"C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\Category.js",[],"C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\utils\\dateFormatter.js",[],"C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\PostSummaryCard.js",[],"C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\TagManager.js",["108"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Input,\r\n    InputGroup,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport Tag from \"../components/Tag\"\r\n\r\n\r\nconst TagManager = () => {\r\n    const { getToken } = useContext(UserProfileContext);\r\n    const [tags, setTags] = useState([]);\r\n    const [newTag, setNewTag] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        getTags();\r\n    }, []);\r\n\r\n    const getTags = () => {\r\n        getToken().then((token) =>\r\n            fetch(`/api/tag`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((tags) => {\r\n                    setTags(tags);\r\n                })\r\n        );\r\n    };\r\n    const saveNewTag = () => {\r\n        const tagToAdd = { name: newTag };\r\n        getToken().then((token) =>\r\n            fetch(\"/api/tag\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(tagToAdd),\r\n            }).then(() => {\r\n                setNewTag(\"\");\r\n                getTags();\r\n            })\r\n        );\r\n    };\r\n    return (\r\n\r\n        <div className=\"container mt-5\">\r\n            <img\r\n                height=\"100\"\r\n                src=\"/quill.png\"\r\n                alt=\"Quill Logo\"\r\n                className=\"bg-danger rounded-circle\"\r\n            />\r\n            <h1>Tag Management</h1>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-xs-12 col-sm-8 col-md-6\">\r\n                    <ListGroup>\r\n                        {tags.map((tag) => (\r\n                            <ListGroupItem key={tag.id}>\r\n                                <Tag tag={tag} onEdit={getTags} onDelete={getTags} />\r\n                            </ListGroupItem>\r\n                        ))}\r\n                    </ListGroup>\r\n                    <div className=\"my-4\">\r\n                        <InputGroup>\r\n                            <Input\r\n                                onChange={(e) => setNewTag(e.target.value)}\r\n                                value={newTag}\r\n                                placeholder=\"Add a new Tag\"\r\n                            />\r\n                            <Button onClick={saveNewTag}>Save</Button>\r\n                        </InputGroup>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n};\r\nexport default TagManager;","C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\Tag.js",["109","110","111"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Button, Input, InputGroup, ButtonGroup, Form } from \"reactstrap\";\r\n\r\nconst Tag = ({ tag }) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [pendingDelete, setPendingDelete] = useState(false);\r\n    const [tagEdits, setTagEdits] = useState(\"\");\r\n\r\n    const showEdit = () => {\r\n        setIsEditing(true);\r\n        setTagEdits(tag.name);\r\n    };\r\n    const hideEdit = () => {\r\n        setIsEditing(false);\r\n        setTagEdits(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"justify-content-between row\">\r\n            {/* If user is editing */}\r\n            {isEditing ? (\r\n                <Form className=\"w-100\">\r\n                    <InputGroup>\r\n                        <Input size=\"sm\" onChange={(e) => setTagEdits(e.target.value)}\r\n                            value={tagEdits} />\r\n                        <ButtonGroup size=\"sm\">\r\n                            <Button onClick={showEdit}>Save</Button>\r\n                            <Button outline color=\"danger\" onClick={hideEdit}>\r\n                                Cancel\r\n                        </Button>\r\n                        </ButtonGroup>\r\n                    </InputGroup>\r\n                </Form>\r\n            ) : (\r\n                    // If user is not editing\r\n                    <>\r\n                        <div className=\"p-1\">{tag.name}</div>\r\n                        <ButtonGroup size=\"sm\">\r\n                            <Button className=\"btn btn-primary\" onClick={showEdit}>\r\n                                Edit\r\n                    </Button>\r\n                            <Button\r\n                                className=\"btn btn-danger\"\r\n                                onClick={(e) => setPendingDelete(true)}\r\n                            >\r\n                                Delete\r\n                    </Button>\r\n                        </ButtonGroup>\r\n                    </>\r\n                )}\r\n\r\n        </div>\r\n    );\r\n};\r\nexport default Tag;","C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\PostForm.js",["112"],"import React, { useState, useContext, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  Input,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\n\r\nconst PostForm = () => {\r\n  const [post, setPost] = useState([]);\r\n  const { getToken } = useContext(UserProfileContext);\r\n  const [imageLocation, setImageLocation] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [categoryId, setCategoryId] = useState(\"\");\r\n  const [publishDateTime, setPublicationDate] = useState(\"\");\r\n\r\n  // Use this hook to allow us to programatically redirect users\r\n  const history = useHistory();\r\n\r\n  const imageHeader = useRef(null);\r\n  const postTitle = useRef(null);\r\n  const postContent = useRef(null);\r\n  const publishDate = useRef(null);\r\n  const catId = useRef(null);\r\n\r\n  const submit = (e) => {\r\n    const post = {\r\n      imageLocation,\r\n      title,\r\n      content,\r\n      categoryId,\r\n      publishDateTime,\r\n    };\r\n    getToken().then((token) =>\r\n      fetch(\"/api/post\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(post),\r\n      }).then((p) => {\r\n        // Navigate the user to post detail\r\n        history.push(`/explore`);\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container pt-4\">\r\n      <div className=\"row justify-content-center\">\r\n        <Card className=\"col-sm-12 col-lg-6\">\r\n          <CardBody>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label for=\"imageLocation\">Header Image URL</Label>\r\n                <Input\r\n                  id=\"imageLocation\"\r\n                  useRef={imageHeader}\r\n                  onChange={(e) => setImageLocation(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"title\">Title</Label>\r\n                <Input\r\n                  id=\"title\"\r\n                  useRef={postTitle}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"content\">Content</Label>\r\n                <Input\r\n                  id=\"content\"\r\n                  useRef={postContent}\r\n                  onChange={(e) => setContent(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"categoryId\">Category Id</Label>\r\n                <Input\r\n                  id=\"categoryId\"\r\n                  useRef={catId}\r\n                  onChange={(e) => setCategoryId(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"publishDateTime\">Publication Date</Label>\r\n                <Input\r\n                  id=\"publishDateTime\"\r\n                  useRef={publishDate}\r\n                  onChange={(e) => setPublicationDate(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n            </Form>\r\n            <Button\r\n              color=\"danger\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                submit(post);\r\n              }}\r\n            >\r\n              SUBMIT POST\r\n            </Button>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n","C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\MyPosts.js",["113"],"C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\components\\NotFoundForm.js",["114","115"],"import React from \"react\";\r\nimport Explore from \"../pages/Explore\";\r\n\r\nconst NotFoundForm = () => {\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-content\">\r\n                <picture>\r\n                    <img src=\"../image/404-error-page-not-found.jpg\" alt=\"404 image\" />\r\n                </picture>\r\n                <link to=\"../pages/Explore.js\">\r\n                    <h1>Go Home</h1>\r\n                </link>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\nexport default NotFoundForm;","C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\CommentForm.js",[],"C:\\Users\\abduk\\workspace\\Fullstack--span--Halen\\Tabloid-Fullstack\\client\\src\\pages\\CommentCard.js",["116"],"import React from \"react\"\r\nimport { Col, Row, Jumbotron } from \"reactstrap\"\r\nimport formatDate from \"../utils/dateFormatter\";\r\n\r\nexport const CommentCard = ({ comments }) => {\r\n\r\n    return <>\r\n        <Row >\r\n            <Col></Col>\r\n            <Col md={7} className=\"text-left mt-5\">\r\n                <div><strong className=\" font-weight-bold\">Subject:</strong>&nbsp; {comments.subject} </div>\r\n            </Col>\r\n            <Col></Col>\r\n        </Row>\r\n        <Row>\r\n            <Col></Col>\r\n            <Col md={7} className=\"text-left mt-1\">\r\n                <div><strong className=\" font-weight-bold\">Comment:</strong>&nbsp;   {comments.content}</div>\r\n            </Col>\r\n            <Col></Col>\r\n        </Row>\r\n        <Row>\r\n            <Col></Col>\r\n            <Col md={7} className=\"text-left mt-1\">\r\n                <div><strong className=\" font-weight-bold\">Author:</strong>&nbsp; {comments.userProfile.displayName}</div>\r\n            </Col>\r\n            <Col></Col>\r\n        </Row>\r\n        <Row>\r\n            <Col></Col>\r\n            <Col md={7} className=\"text-left mt-1\">\r\n                <div> <strong className=\" font-weight-bold\">Posted:</strong>&nbsp;  {formatDate(comments.createDateTime)} </div>\r\n            </Col>\r\n            <Col></Col>\r\n        </Row>\r\n    </>\r\n}",{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":17,"column":11,"nodeType":"123","messageId":"124","endLine":17,"endColumn":25},{"ruleId":"121","severity":1,"message":"125","line":14,"column":8,"nodeType":"123","messageId":"124","endLine":14,"endColumn":20},{"ruleId":"121","severity":1,"message":"126","line":18,"column":11,"nodeType":"123","messageId":"124","endLine":18,"endColumn":18},{"ruleId":"121","severity":1,"message":"122","line":17,"column":11,"nodeType":"123","messageId":"124","endLine":17,"endColumn":25},{"ruleId":"127","severity":1,"message":"128","line":21,"column":6,"nodeType":"129","endLine":21,"endColumn":8,"suggestions":"130"},{"ruleId":"127","severity":1,"message":"131","line":20,"column":8,"nodeType":"129","endLine":20,"endColumn":10,"suggestions":"132"},{"ruleId":"121","severity":1,"message":"133","line":1,"column":27,"nodeType":"123","messageId":"124","endLine":1,"endColumn":37},{"ruleId":"121","severity":1,"message":"134","line":1,"column":39,"nodeType":"123","messageId":"124","endLine":1,"endColumn":48},{"ruleId":"121","severity":1,"message":"135","line":6,"column":12,"nodeType":"123","messageId":"124","endLine":6,"endColumn":25},{"ruleId":"121","severity":1,"message":"136","line":15,"column":16,"nodeType":"123","messageId":"124","endLine":15,"endColumn":23},{"ruleId":"127","severity":1,"message":"137","line":26,"column":6,"nodeType":"129","endLine":26,"endColumn":8,"suggestions":"138"},{"ruleId":"121","severity":1,"message":"139","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":15},{"ruleId":"140","severity":1,"message":"141","line":10,"column":21,"nodeType":"142","endLine":10,"endColumn":88},{"ruleId":"121","severity":1,"message":"143","line":2,"column":20,"nodeType":"123","messageId":"124","endLine":2,"endColumn":29},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'getCurrentUser' is assigned a value but never used.","Identifier","unusedVar","'NotFoundForm' is defined but never used.","'isAdmin' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.","ArrayExpression",["146"],"React Hook useEffect has a missing dependency: 'getTags'. Either include it or remove the dependency array.",["147"],"'useContext' is defined but never used.","'useEffect' is defined but never used.","'pendingDelete' is assigned a value but never used.","'setPost' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getToken'. Either include it or remove the dependency array.",["148"],"'Explore' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Jumbotron' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [getCategories]",{"range":"155","text":"156"},"Update the dependencies array to be: [getTags]",{"range":"157","text":"158"},"Update the dependencies array to be: [getToken]",{"range":"159","text":"160"},[651,653],"[getCategories]",[516,518],"[getTags]",[641,643],"[getToken]"]